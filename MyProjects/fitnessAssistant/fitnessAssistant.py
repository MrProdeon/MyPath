import json
import math

basic_met_list = list()
bodyfat_list = list()
calories_per_day = list()
macros_list = list()
target_list = list()
bmr_list = list()
global_weight = list()

def get_bmr(gender : str, age : int, height : int | float, weight : int | float) -> int | float:
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –±–∞–∑–æ–≤–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤–µ—â–µ—Å—Ç–≤"""
    if gender.lower() in '–º':
        bmr = 10 * weight + 6.25 * height - 5 * age + 5
    elif gender.lower() in '–∂':
        bmr = 10 * weight + 6.25 * height - 5 * age - 161
    basic_met_list.append(bmr)
    return round(bmr, 2)


def get_bfp(gender, height, weight, neck, waist, hip):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∂–∏—Ä–∞
    height - —Ä–æ—Å—Ç
    weight - –≤–µ—Å
    neck - —à–µ—è
    waist - —Ç–∞–ª–∏—è
    hip - –æ–±—Ö–≤–∞—Ç –±—ë–¥–µ—Ä
    """
    if gender == '–º':
        bodyfat = 495 / (1.0324 - 0.19077 * math.log10(waist - neck) + 0.15456 * math.log10(height)) - 450
    elif gender == '–∂':
        bodyfat = 495 / (1.29579 - 0.35004 * math.log10(waist + hip - neck) + 0.22100 * math.log10(height)) - 450
    bodyfat_list.append(bodyfat)
    return int(bodyfat)


def calories_spent_per_day(bmr, steps, train, digestion, daily_activity):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π –∑–∞ –¥–µ–Ω—å
    bmr - –±–∞–∑–æ–≤—ã–π –æ–±–º–µ–Ω
    steps - —à–∞–≥–∏
    train - —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞
    digestion - –ø–µ—Ä–µ–≤–∞—Ä–∏–≤–∞–Ω–∏–µ
    daily_activity - –±—ã—Ç–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    """
    total = bmr
    total += sum([steps, train, digestion, daily_activity])
    calories_per_day.append(total)
    return total


def get_calories_for_steps(steps, weight):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π –∑–∞ —à–∞–≥–∏"""
    steps_calories = steps * 0.035 *(weight / 70)
    return round(steps_calories, 2)


def get_calories_for_train(part, tonnage, press_sets, rest_time, sets, walk_speed=3):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É"""
    epoc_input = input('–ù–∞—Å–∫–æ–ª—å–∫–æ —Ç—è–∂–µ–ª–∞—è –±—ã–ª–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞? 1 - –ª–µ–≥–∫–∞—è, 2 - —Ç—è–∂–µ–ª–∞—è ---> ')
    while epoc_input not in ('1', '2'):
        epoc_input = input('–ù–∞—Å–∫–æ–ª—å–∫–æ —Ç—è–∂–µ–ª–∞—è –±—ã–ª–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞? 1 - –ª–µ–≥–∫–∞—è, 2 - —Ç—è–∂–µ–ª–∞—è ---> ')
    epoc = 100 if epoc_input == '2' else 70
    if part in ('–≥—Ä—É–¥—å–±–∏—Ü–µ–ø—Å', '—Å–ø–∏–Ω–∞—Ç—Ä–∏—Ü–µ–ø—Å'):
        k = 0.031
    if part in '–Ω–æ–≥–∏':
        k = 0.034
    calories = (tonnage * k) + (( rest_time * sets * walk_speed) * 0.045) + (press_sets * 6) + epoc

    return calories

def get_digestion(eat_calories):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π –Ω–∞ –ø–µ—Ä–µ–≤–∞—Ä–∏–≤–∞–Ω–∏–µ –ø–∏—â–∏"""
    return eat_calories * 0.10

def get_daily_activity():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ—Ä–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –±—ã—Ç–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."""
    level_activity = {'1' : 150, '2' : 300, '3' : 550}
    daily_activity = input('üîΩ\n–ú–Ω–æ–≥–æ –ª–∏ —Å–µ–≥–æ–¥–Ω—è –±—ã–ª–æ –±—ã—Ç–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ? 1 - –º–∞–ª–æ (–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Å—å –¥–µ–Ω—å —Å–∏–¥–µ—Ç—å –∏–ª–∏ –ª–µ–∂–∞—Ç—å, —Ä–µ–¥–∫–∞—è —Ö–æ–¥—å–±–∞)\n2 - —Å—Ä–µ–¥–Ω–µ (–•–æ–¥—å–±–∞ –ø–æ –¥–æ–º—É, —É–±–æ—Ä–∫–∞, –≥–æ—Ç–æ–≤–∫–∞ –≤ –æ–±—ã—á–Ω–æ–º —Ç–µ–º–ø–µ)\n3 - –º–Ω–æ–≥–æ (–ë–æ–ª—å—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–æ–º—É, –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞, –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –≤–µ—â–µ–π...)\n---> ')
    while daily_activity not in ('1', '2', '3'):
        daily_activity = input('–ú–Ω–æ–≥–æ –ª–∏ —Å–µ–≥–æ–¥–Ω—è –±—ã–ª–æ –±—ã—Ç–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ? 1 - –º–∞–ª–æ, 2 - —Å—Ä–µ–¥–Ω–µ, 3 - –º–Ω–æ–≥–æ')
    return level_activity[daily_activity]


def get_macros(weight, func_per_day):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ë–ñ–£. –î–ª—è –≤—Å–µ—Ö —Ü–µ–ª–µ–π –≤—ã–±—Ä–∞–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
    2–≥—Ä –±–µ–ª–∫–∞ –Ω–∞ 1–∫–≥ –≤–µ—Å–∞ —Ç–µ–ª–∞ –∏ 1–≥—Ä –∂–∏—Ä–∞ –Ω–∞ 1–∫–≥ –≤–µ—Å–∞ —Ç–µ–ª–∞"""
    protein = weight * 2
    protein_calories = protein * 4
    fat = 1 * weight
    fat_calories = fat * 9
    carbs_calories = func_per_day - protein_calories - fat_calories
    carbs = carbs_calories / 4
    macros_str = f'–ë–µ–ª–∫–∏ - {protein}, –ñ–∏—Ä—ã - {fat}, –£–≥–ª–µ–≤–æ–¥—ã - {carbs}'
    macros_list.append(macros_str)
    return macros_str

def get_tarder_calories(func_calories_per_day):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–µ—Ñ–∏—Ü–∏—Ç–∞ –∏ –ø—Ä–æ—Ñ–∏—Ü–∏—Ç–∞"""
    target_list.append(f'–î–ª—è –¥–µ—Ñ–∏—Ü–∏—Ç–∞ –∫–∞–ª–æ—Ä–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—ä–µ—Å—Ç—å - {func_calories_per_day - 500}\n–î–ª—è –ø—Ä–æ—Ñ–∏—Ü–∏—Ç–∞ –∫–∞–ª–æ—Ä–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—ä–µ—Å—Ç—å - {func_calories_per_day + 300}')
    return f'–î–ª—è –¥–µ—Ñ–∏—Ü–∏—Ç–∞ –∫–∞–ª–æ—Ä–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—ä–µ—Å—Ç—å - {func_calories_per_day - 500}\n–î–ª—è –ø—Ä–æ—Ñ–∏—Ü–∏—Ç–∞ –∫–∞–ª–æ—Ä–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—ä–µ—Å—Ç—å - {func_calories_per_day + 300}'


def save_changes(collection, filename):
    with open(filename, 'w', encoding='UTF-8') as file:
        json.dump(collection, fp=file, ensure_ascii=False, indent=4, )


def load_changes(filename):
    try:
        with open(filename, 'r', encoding='utf-8') as file:
            return json.load(file)
    except FileNotFoundError:
        return []
    except json.JSONDecodeError:
        return []


def check_number_or_string(value):
    try:
        value = float(value)
    except ValueError:
        while True:
            value = input('–î–ª—è –≤–≤–æ–¥–∞ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞. ---> ')
            try:
                value = float(value)
                break
            except ValueError:
                continue
    return value


def main():
    global basic_met_list, bodyfat_list, calories_per_day, macros_list, target_list, bmr_list, global_weight

    basic_met_list = load_changes('basic_met.txt')
    bodyfat_list = load_changes('bodyfat.txt')
    calories_per_day = load_changes('calories_per_day.txt')
    macros_list = load_changes('macros.txt')
    target_list = load_changes('target.txt')
    bmr_list = load_changes('bmr.txt')
    global_weight = load_changes('weight.txt')


    what_want = input('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—Å—ë —Å–Ω–∞—á–∞–ª–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–µ –∫–∞–ª–æ—Ä–∏–∏ –∏ —Ü–µ–ª—å –∑–∞ –¥–µ–Ω—å?\n1 - —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—Å—ë —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞\n2 - —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏ –∏ —Ü–µ–ª—å –Ω–∞ –¥–µ–Ω—å\n---> ')
    while what_want not in ('1', '2'):
        what_want = input('–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö : \n1 - —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—Å—ë —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞\n2 - —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏ –∏ —Ü–µ–ª—å –Ω–∞ –¥–µ–Ω—å\n---> ')
    if what_want == '2' and len(global_weight) == 0:
        what_want = '1'
        print('–ü–µ—Ä–≤—ã–π —Ä–∞–∑ –Ω—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—Å—ë —Å–Ω–∞—á–∞–ª–∞.')
    if what_want == '1':
        #–†–∞—Å—Å—á–µ—Ç –±–∞–∑–æ–≤–æ–≥–æ –æ–±–º–µ–Ω–∞
        print('–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º –±–∞–∑–æ–≤—ã–π –æ–±–º–µ–Ω –≤–µ—â–µ—Å—Ç–≤.')
        # –ü–æ–ª
        while (gender := input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–æ–ª: –º –∏–ª–∏ –∂ ---> ')) not in ('–º', '–∂'):
            print('–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. –º –∏–ª–∏ –∂ ---> ')
        # –í–æ–∑—Ä–∞—Å—Ç
        age = check_number_or_string(input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç ---> '))

        # –†–æ—Å—Ç
        height = check_number_or_string(input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç ---> '))

        # –í–µ—Å
        weight = check_number_or_string(input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å ---> '))
        global_weight.append(weight)
        save_changes(global_weight, 'weight.txt')



        bmr = get_bmr(gender, age, height, weight)
        bmr_list.append(bmr)
        save_changes(bmr_list, 'bmr.txt')
        save_changes(basic_met_list, 'basic_met.txt')
        print(f'üîΩ\n–í–∞—à –±–∞–∑–æ–≤—ã–π –æ–±–º–µ–Ω –≤–µ—â–µ—Å—Ç–≤ - {load_changes('basic_met.txt')[-1]} –∫–∞–ª–æ—Ä–∏–π.')

        #–†–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∂–∏—Ä–∞
        print('üîΩ\n–¢–µ–ø–µ—Ä—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç –∂–∏—Ä–∞.')
        #–®–µ—è
        neck = check_number_or_string(input('–í–≤–µ–¥–∏—Ç–µ –æ–±—Ö–≤–∞—Ç —à–µ–∏ –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö ---> '))


        #–¢–∞–ª–∏—è
        waist = check_number_or_string(input('–í–≤–µ–¥–∏—Ç–µ –æ–±—Ö–≤–∞—Ç —Ç–∞–ª–∏–∏ –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö ---> '))


        #–û–±—Ö–≤–∞—Ç –±—ë–¥–µ—Ä
        hip = check_number_or_string(input('–í–≤–µ–¥–∏—Ç–µ –æ–±—Ö–≤–∞—Ç –±—ë–¥–µ—Ä –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö ---> '))


        get_bfp(gender, height, weight, neck, waist, hip)
        save_changes(bodyfat_list, 'bodyfat.txt')
        print(f'üîΩ\n–í–∞—à –ø—Ä–æ—Ü–µ–Ω—Ç –∂–∏—Ä–∞ : {bodyfat_list[-1]}')

    print('üîΩ\n–†–∞—Å—Å—á–∏—Ç–∞–µ–º –ø–æ—Ç—Ä–µ—á–µ–Ω–Ω—ã–µ –∫–∞–ª–æ—Ä–∏–∏ –∑–∞ –¥–µ–Ω—å :')
    steps = check_number_or_string(input('–°–∫–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è –±—ã–ª–æ –ø—Ä–æ–π–¥–µ–Ω–æ —à–∞–≥–æ–≤? ---> '))
    train_or_not = input('üîΩ\n–ë—ã–ª–∞ –ª–∏ —Å–µ–≥–æ–¥–Ω—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞? 1 - –µ—Å–ª–∏ –¥–∞, 2 - –µ—Å–ª–∏ –Ω–µ—Ç ---> ')
    while train_or_not not in ('1', '2'):
        train_or_not = input('–ë—ã–ª–∞ –ª–∏ —Å–µ–≥–æ–¥–Ω—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞? 1 - –µ—Å–ª–∏ –¥–∞, 2 - –µ—Å–ª–∏ –Ω–µ—Ç ---> ')
    if train_or_not == '1':
        print('–†–∞—Å—Å—á–∏–∞—Ç–µ–º –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–µ –∫–∞–ª–æ—Ä–∏–∏ –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É : ')
        part = input('–ö–∞–∫–∏–µ –≥—Ä—É–ø–ø—ã –º—ã—à—Ü —Å–µ–≥–æ–¥–Ω—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞–ª–∏—Å—å?\n–î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –≤–≤–æ–¥: –≥—Ä—É–¥—å–±–∏—Ü–µ–ø—Å , —Å–ø–∏–Ω–∞—Ç—Ä–∏—Ü–µ–ø—Å, –Ω–æ–≥–∏ ---> ')
        while part not in ('–≥—Ä—É–¥—å–±–∏—Ü–µ–ø—Å', '—Å–ø–∏–Ω–∞—Ç—Ä–∏—Ü–µ–ø—Å', '–Ω–æ–≥–∏'):
            part = input('–î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –≤–≤–æ–¥: –≥—Ä—É–¥—å–±–∏—Ü–µ–ø—Å , —Å–ø–∏–Ω–∞—Ç—Ä–∏—Ü–µ–ø—Å, –Ω–æ–≥–∏')
        tonnage = check_number_or_string(input('–ö–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è —Ç–æ–Ω–Ω–∞–∂ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ? ---> '))
        press_sets = check_number_or_string(input('–°–∫–æ–ª—å–∫–æ –±—ã–ª–æ –ø–æ–¥—Ö–æ–¥–æ–≤ –Ω–∞ –ø—Ä–µ—Å—Å? ---> '))
        rest_time = check_number_or_string(input('–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞ –º–µ–∂–¥—É –ø–æ–¥—Ö–æ–¥–∞–º–∏ ---> '))
        sets = check_number_or_string(input('–°–∫–æ–ª—å–∫–æ –ø–æ–¥—Ö–æ–¥–æ–≤ ---> '))
        train = get_calories_for_train(part, tonnage, press_sets, rest_time, sets)
        print(f'\n–ó–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –±—ã–ª–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ {train} –∫–∞–ª–æ—Ä–∏–π\n')
    if train_or_not == '2':
        train = 0

    print('üîΩ\n–†–∞—Å—Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª–æ—Ä–∏–π, –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –Ω–∞ –ø–µ—Ä–µ–≤–∞—Ä–∏–≤–∞–Ω–∏–µ –ø–∏—â–∏')
    digestion = get_digestion(check_number_or_string(input('–°–∫–æ–ª—å–∫–æ –∫–∞–ª–æ—Ä–∏–π —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç —Å—ä–µ–¥–µ–Ω–æ? ---> ')))
    daily_activity = get_daily_activity()
    step_ccals = get_calories_for_steps(steps, global_weight[-1])
    ccals_per_day = calories_spent_per_day(bmr_list[-1], step_ccals, train, digestion, daily_activity)
    save_changes(calories_per_day, 'calories_per_day.txt')
    print(f'–ó–∞ –¥–µ–Ω—å –±—ã–ª–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ {calories_per_day[-1]} –∫–∞–ª–æ—Ä–∏–π üî•\nüîΩ ')

    # need_macros_or_not = input('–•–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ë–ñ–£? 1 - –¥–∞, 2 - –Ω–µ—Ç ---> ')
    # while need_macros_or_not not in ('1', '2'):
    #     need_macros_or_not = input('–•–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ë–ñ–£? 1 - –¥–∞, 2 - –Ω–µ—Ç ---> ')
    # if need_macros_or_not == '1' and len(global_weight) > 0:
    #     result_macros = get_macros(global_weight[-1], calories_spent_per_day(bmr_list[-1], step_ccals, train, digestion, daily_activity))
    #     save_changes(macros_list, 'macros.txt')
    #     print(f'üîΩ\n{result_macros}\n')

    print(f'''
‚úÖ‚úÖ‚úÖ
–ò—Ç–æ–≥:
–î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—ä–µ—Å—Ç—å : {calories_spent_per_day(bmr_list[-1], step_ccals, train, digestion, daily_activity)}
–ë–ñ–£ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è : {get_macros(global_weight[-1], calories_spent_per_day(bmr_list[-1], step_ccals, train, digestion, daily_activity))}
‚úÖ‚úÖ‚úÖ
–î–ª—è –ø—Ä–æ—Ñ–∏—Ü–∏—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—ä–µ—Å—Ç—å {calories_spent_per_day(bmr_list[-1], step_ccals, train, digestion, daily_activity) + 300}
–ë–ñ–£ –¥–ª—è –ø—Ä–æ—Ñ–∏—Ü–∏—Ç–∞ : {get_macros(global_weight[-1], calories_spent_per_day(bmr_list[-1], step_ccals, train, digestion, daily_activity) + 300)}
‚úÖ‚úÖ‚úÖ
–î–ª—è –¥–µ—Ñ–∏—Ü–∏—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—ä–µ—Å—Ç—å {calories_spent_per_day(bmr_list[-1], step_ccals, train, digestion, daily_activity) - 500}
–ë–ñ–£ –¥–ª—è –¥–µ—Ñ–∏—Ü–∏—Ç–∞ : {get_macros(global_weight[-1], calories_spent_per_day(bmr_list[-1], step_ccals, train, digestion, daily_activity) - 500)}
‚úÖ‚úÖ‚úÖ
''')







main()
